package com.gmh.wzz.api.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class TbWzzInfoTypeExample implements Serializable{

	private static final long serialVersionUID = 1L;
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    protected List<Criteria> oredCriteria;

    protected Page page; 
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public TbWzzInfoTypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTypeCodeIsNull() {
            addCriterion("TYPE_CODE is null");
            return (Criteria) this;
        }

        public Criteria andTypeCodeIsNotNull() {
            addCriterion("TYPE_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andTypeCodeEqualTo(String value) {
            addCriterion("TYPE_CODE =", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeNotEqualTo(String value) {
            addCriterion("TYPE_CODE <>", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeGreaterThan(String value) {
            addCriterion("TYPE_CODE >", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeGreaterThanOrEqualTo(String value) {
            addCriterion("TYPE_CODE >=", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeLessThan(String value) {
            addCriterion("TYPE_CODE <", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeLessThanOrEqualTo(String value) {
            addCriterion("TYPE_CODE <=", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeLike(String value) {
            addCriterion("TYPE_CODE like", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeNotLike(String value) {
            addCriterion("TYPE_CODE not like", value, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeIn(List<String> values) {
            addCriterion("TYPE_CODE in", values, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeNotIn(List<String> values) {
            addCriterion("TYPE_CODE not in", values, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeBetween(String value1, String value2) {
            addCriterion("TYPE_CODE between", value1, value2, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeCodeNotBetween(String value1, String value2) {
            addCriterion("TYPE_CODE not between", value1, value2, "typeCode");
            return (Criteria) this;
        }

        public Criteria andTypeNameIsNull() {
            addCriterion("TYPE_NAME is null");
            return (Criteria) this;
        }

        public Criteria andTypeNameIsNotNull() {
            addCriterion("TYPE_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andTypeNameEqualTo(String value) {
            addCriterion("TYPE_NAME =", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameNotEqualTo(String value) {
            addCriterion("TYPE_NAME <>", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameGreaterThan(String value) {
            addCriterion("TYPE_NAME >", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameGreaterThanOrEqualTo(String value) {
            addCriterion("TYPE_NAME >=", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameLessThan(String value) {
            addCriterion("TYPE_NAME <", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameLessThanOrEqualTo(String value) {
            addCriterion("TYPE_NAME <=", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameLike(String value) {
            addCriterion("TYPE_NAME like", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameNotLike(String value) {
            addCriterion("TYPE_NAME not like", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameIn(List<String> values) {
            addCriterion("TYPE_NAME in", values, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameNotIn(List<String> values) {
            addCriterion("TYPE_NAME not in", values, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameBetween(String value1, String value2) {
            addCriterion("TYPE_NAME between", value1, value2, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameNotBetween(String value1, String value2) {
            addCriterion("TYPE_NAME not between", value1, value2, "typeName");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNull() {
            addCriterion("PARENT_ID is null");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNotNull() {
            addCriterion("PARENT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andParentIdEqualTo(String value) {
            addCriterion("PARENT_ID =", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotEqualTo(String value) {
            addCriterion("PARENT_ID <>", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThan(String value) {
            addCriterion("PARENT_ID >", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanOrEqualTo(String value) {
            addCriterion("PARENT_ID >=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThan(String value) {
            addCriterion("PARENT_ID <", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanOrEqualTo(String value) {
            addCriterion("PARENT_ID <=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLike(String value) {
            addCriterion("PARENT_ID like", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotLike(String value) {
            addCriterion("PARENT_ID not like", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdIn(List<String> values) {
            addCriterion("PARENT_ID in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotIn(List<String> values) {
            addCriterion("PARENT_ID not in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdBetween(String value1, String value2) {
            addCriterion("PARENT_ID between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotBetween(String value1, String value2) {
            addCriterion("PARENT_ID not between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkIsNull() {
            addCriterion("TYPE_REMARK is null");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkIsNotNull() {
            addCriterion("TYPE_REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkEqualTo(String value) {
            addCriterion("TYPE_REMARK =", value, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkNotEqualTo(String value) {
            addCriterion("TYPE_REMARK <>", value, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkGreaterThan(String value) {
            addCriterion("TYPE_REMARK >", value, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("TYPE_REMARK >=", value, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkLessThan(String value) {
            addCriterion("TYPE_REMARK <", value, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkLessThanOrEqualTo(String value) {
            addCriterion("TYPE_REMARK <=", value, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkLike(String value) {
            addCriterion("TYPE_REMARK like", value, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkNotLike(String value) {
            addCriterion("TYPE_REMARK not like", value, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkIn(List<String> values) {
            addCriterion("TYPE_REMARK in", values, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkNotIn(List<String> values) {
            addCriterion("TYPE_REMARK not in", values, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkBetween(String value1, String value2) {
            addCriterion("TYPE_REMARK between", value1, value2, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeRemarkNotBetween(String value1, String value2) {
            addCriterion("TYPE_REMARK not between", value1, value2, "typeRemark");
            return (Criteria) this;
        }

        public Criteria andTypeIconIsNull() {
            addCriterion("TYPE_ICON is null");
            return (Criteria) this;
        }

        public Criteria andTypeIconIsNotNull() {
            addCriterion("TYPE_ICON is not null");
            return (Criteria) this;
        }

        public Criteria andTypeIconEqualTo(String value) {
            addCriterion("TYPE_ICON =", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconNotEqualTo(String value) {
            addCriterion("TYPE_ICON <>", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconGreaterThan(String value) {
            addCriterion("TYPE_ICON >", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconGreaterThanOrEqualTo(String value) {
            addCriterion("TYPE_ICON >=", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconLessThan(String value) {
            addCriterion("TYPE_ICON <", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconLessThanOrEqualTo(String value) {
            addCriterion("TYPE_ICON <=", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconLike(String value) {
            addCriterion("TYPE_ICON like", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconNotLike(String value) {
            addCriterion("TYPE_ICON not like", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconIn(List<String> values) {
            addCriterion("TYPE_ICON in", values, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconNotIn(List<String> values) {
            addCriterion("TYPE_ICON not in", values, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconBetween(String value1, String value2) {
            addCriterion("TYPE_ICON between", value1, value2, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconNotBetween(String value1, String value2) {
            addCriterion("TYPE_ICON not between", value1, value2, "typeIcon");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated do_not_delete_during_merge Sat Jun 27 09:02:03 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_wzz_info_type
     *
     * @mbggenerated Sat Jun 27 09:02:03 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

	public Page getPage() {
		return page;
	}

	public void setPage(Page page) {
		this.page = page;
	}

	public void setOredCriteria(List<Criteria> oredCriteria) {
		this.oredCriteria = oredCriteria;
	}
}